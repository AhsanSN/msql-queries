CREATE TABLE author (
    authorCode varchar(55),
    authorName varchar(55),
	PRIMARY KEY (authorCode)
);

CREATE TABLE book (
    isbn varchar(55),
    title varchar(55),
	price money,
    publisherCode varchar(55),
	PRIMARY KEY (isbn)
);

CREATE TABLE publisher (
    publisherCode varchar(55),
    publisherName varchar(55),
	PRIMARY KEY (publisherCode)
);

CREATE TABLE bookAuthor (
    isbn varchar(55),
    authorCode varchar(55),
	FOREIGN KEY (isbn) REFERENCES book(isbn),
	FOREIGN KEY (authorCode) REFERENCES author(authorCode),

);

Create table Customer
(
	CustId Int Identity(1,1) Not null,
	CustName varchar(50) not null,
	Primary Key (CustId)
);

go

Create table CustOrder
(
	OrderId Int Identity(1,1) Not null,
	fkCustId Int not null,
	orderDate date not null,
	orderValue money not null,
	Primary Key (OrderId),
	Foreign Key (fkCustId) References Customer(CustId)
);

go

/** data entry **/

Insert into Customer Values ('first cost')
Insert into Customer Values ('seconst cost')


-- q1: select orders >= 50

/**
select 
	OrderId, OrderDate, OrderValue, CustName 
from 
	CustOrder inner join Customer On
		CustOrder.fkCustId = Customer.CustId
Where 
	OrderValue >= 50
	**/

-- q2: select orders from 2018

/**
select 
	OrderId, OrderDate, OrderValue, CustName 
from 
	CustOrder inner join Customer On
		CustOrder.fkCustId = Customer.CustId
Where 
	OrderDate >= '1-JAN-2018' and OrderDate <= '31-DEC-2018'

	**/

	-- q3: select orders from 2017 and value < 50

	/**
select 
	OrderId, CustName, OrderValue 
from 
	CustOrder inner join Customer On
		CustOrder.fkCustId = Customer.CustId
Where 
	OrderDate >= '1-JAN-2017' and OrderDate <= '31-DEC-2017' and OrderValue < 50

	**/

Declare @index int

	set @index = 1

	while @index <= 50000

	Begin
	Insert into custorder values(cast(Rand()*2 as int)+1, dateadd(dd, cast(rand()*1000 as int),'01-Jan-2017'), cast(rand()*50000 as int)/100 +10.00)
	
	set @index  = @index + 1

	end

	select * from custorder


/** 
Q1


select 
	* 
from 
	Warehouse.StockItems
**/

/** 
Q2


select 
	StockItemName, UnitPrice, Brand, Size, SupplierID
from 
	Warehouse.StockItems

**/

/** 
Q3


select 
	orderid, orderdate, customerid
from 
	sales.orders
where
	**/

/** 
Q4

select 
	*
from 
	Warehouse.StockItems
where
	supplierid = 4 and unitpackageprice <30
	**/

/** 
Q5


select 
	*
from 
	Warehouse.StockItems
where
	supplierid in (12,5,7) and unitprice >15
	**/

	/** 
Q6


select 
	*
from 
	Warehouse.StockItems
where
	ColorID is NULL

	**/

		/** 
Q1


select 
	*
from 
	sales.OrderLines
where
	OrderID between 40 and 50

	**/

			/** 
Q2

**/
select 
	*
from 
	sales.OrderLines
where
	OrderID between 40 and 50


-- select * from Warehouse.StockItems
--select * from Purchasing.Suppliers P inner join Warehouse.StockItems W on p.
 --where SupplierID in (12,5,7)
-- select * from Warehouse.StockItems where ColorID is null
-- select * from Warehouse.StockItems where CustomFields like '%china%' and Tags like '%comedy%'
-- select * from Warehouse.StockItems where CustomFields like '%"32gb","usb powered"%'
-- select * from Warehouse.StockItems where CustomFields like '%"32gb","usb powered"%'

select 
	si.stockitemname [item name], up.packagetypename [unit package], op.packagetypename [outer package]
from
	Warehouse.StockItems si inner join Warehouse.PackageTypes up on si.UnitPackageID = up.PackageTypeID 
		inner join  Warehouse.PackageTypes op on si.OuterPackageID = op.PackageTypeID

/**
select 
	* 
from
	sales.BuyingGroups BG inner join sales.Customers C 
		on bg.BuyingGroupID = c.BuyingGroupID 
	inner join sales.CustomerCategories cc
		on cc.CustomerCategoryID = c.CustomerCategoryID


select * from
Warehouse.Colors C inner join Warehouse.StockItems Si on C.ColorID = Si.ColorID
where c.ColorName in ('red','green', 'white')

**/

select * from sales.BuyingGroups bg inner join sales.Customers c on bg.BuyingGroupID = c.BuyingGroupID

	

